% mmind-datalog---itertools.ps BEGIN

% OC = class

itertools_product(X0,X1,X2,X3,OC) :- isa(X0,OC), isa(X1,OC), isa(X2,OC), isa(X3,OC).    % sz = 1296 = NOC**NOH

% reconciliations with python itertools are mentioned below.

offline__itertools_permutations4(X0,X1,X2,X3,OC) :- itertools_product4(X0,X1,X2,X3,OC),
	X0 != X1, X0 != X2, X0 != X3,
	X1 != X2, X1 != X3,
	X2 != X3.
% in python: itertools.permutations(range(6), r=4) %%% sz = 360
% size of itertools_permutations4(X0,X1,X2,X3,co) = 360
% size of itertools_permutations4(X0,X1,X2,X3,ho) = 24
% head(3) of itertools_permutations4(c0, c5, c4, c2, co):
% itertools_permutations4(c0, c5, c4, c2, co)
% itertools_permutations4(c3, c5, c4, c1, co)
% itertools_permutations4(c2, c5, c0, c3, co)

greater_than(X5,X1,OC) :- follows(X5,X4,OC), greater_than(X4,X1,OC).
greater_than(X5,X1,OC) :- follows(X5,X1,OC).

% ... recursive rule used for itertools_combinations.
%
% head(3) of greater_than(HH,LL,ho):
% greater_than(h1, h0, ho)
% greater_than(h2, h0, ho)
% greater_than(h2, h1, ho)


itertools_combinations(X0,X1,OC) :- isa(X0,OC), isa(X1,OC), greater_than(X1,X0,OC).
% in python = itertools.combinations(range(4), r=2) %%% sz = 6
itertools_combinations(X0,X1,X2,OC) :- 
	itertools_combinations(X0,X1,OC), 
	itertools_combinations(X0,X2,OC), 
	itertools_combinations(X1,X2,OC).
% in python = itertools.combinations(range(4), r=3) %%% sz = 4
itertools_combinations(X0,X1,X2,X3,OC) :- 
	itertools_combinations(X0,X1,X2,OC), 
	itertools_combinations(X0,X1,X3,OC), 
	itertools_combinations(X0,X2,X3,OC), 
	itertools_combinations(X1,X2,X3,OC).
% in python = itertools.combinations(range(4), r=4) %%% sz = 1
% head(3) of itertools_combinations(X0,X1,X2,X3,ho):
% itertools_combinations(h0, h1, h2, h3, ho)
% (just one)

itertools_permutations(X0,X1,OC) :- isa(X0,OC), isa(X1,OC), X0 != X1.
% in python = itertools.permutations(range(6), r=2) %%% sz = 30
itertools_permutations(X0,X1,X2,OC) :- 
	itertools_permutations(X0,X1,OC), 
	itertools_permutations(X0,X2,OC), 
	itertools_permutations(X1,X2,OC).
% in python = itertools.permutations(range(6), r=3) %%% sz = 120
itertools_permutations(X0,X1,X2,X3,OC) :- 
	itertools_permutations(X0,X1,X2,OC), 
	itertools_permutations(X0,X1,X3,OC), 
	itertools_permutations(X0,X2,X3,OC), 
	itertools_permutations(X1,X2,X3,OC).
% in python = itertools.permutations(range(6), r=4) %%% sz = 360
%
% head(3) of itertools_permutations(c0, c5, c4, c2, co):
% itertools_permutations(c0, c5, c4, c2, co)
% itertools_permutations(c3, c5, c4, c1, co)
% itertools_permutations(c2, c5, c0, c3, co)



% mmind-datalog---itertools.ps END